spring.profiles.active=h2

#Make sure to deactivate spring.jpa.hibernate.ddl-auto if you use schema.sql. This is actually a shortcut for the "hibernate.hbm2ddl.auto" property
spring.jpa.hibernate.ddl-auto = none
#Initialization with schema.sql & init_data.sql happens by default (with/without this property)
spring.datasource.initialization-mode=embedded

spring.jpa.properties.hibernate.cache.use_second_level_cache=false
spring.jpa.properties.hibernate.cache.use_query_cache=false
spring.jpa.properties.hibernate.cache.region.factory_class=org.hibernate.cache.jcache.JCacheRegionFactory
spring.jpa.properties.hibernate.javax.cache.provider = org.ehcache.jsr107.EhcacheCachingProvider
spring.jpa.properties.javax.persistence.sharedCache.modeDomain=ENABLE_SELECTIVE
spring.jackson.serialization.WRITE_DATES_AS_TIMESTAMPS = false

# Should we use some DB for backing HttpSession? Options: {none, jdbc, redis}
spring.session.store-type=none
# 2 hours of session inactivity, applicable for both {none and redis}
server.servlet.session.timeout=2h

# Init DB with some data in a certain language, accepted {en, fr, ru}
ratos.init.re_init = true
ratos.init.locale = en

# As per LTI v1.1.1, this is the base URL which TC (LMS) should request with POST to perform launch request
# Change this value for the actual domain name after production deployment
ratos.lti.launch_url = http://localhost:8090/lti/1p0/launch
ratos.lti.launch_path = /lti/1p0/launch
# Whether we should replace https (requested) to http (actual) protocols?
ratos.lti.launch_url_fix = true


# Whether we should take into account student groups when deciding if to allow access to a given schema?
ratos.session.include_groups = true
# Whether we should shuffle answers each time? If true, randomizes answers of questions where possible.
ratos.session.schuffle_enabled = true
# Algorithm to randomly pick up questions from DB {JPA for universal case, DB - database specific solution}
ratos.session.random_algorithm = DECIDE
# How many sessions can be preserved by a user in this installation of RATOS
ratos.session.preserved_limit = 5
# How many questions can be kept starred by a user in this installation of RATOS
ratos.session.starred_limit = 100


# Cleaning of the heavy result_details table with JSON serialised session details is enabled by default
ratos.result.clean_on = false
# Specifies the day and time when to clean the result_details table
ratos.result.period = DAILY
ratos.result.clean_hour = 01
ratos.result.clean_minute = 01

# Game mode is enabled by default
ratos.game.game_on = true
# Game mode boundaries and points within these boundaries
ratos.game.low_boundary_from = 80
ratos.game.low_boundary_to = 84
ratos.game.middle_boundary_from = 85
ratos.game.middle_boundary_to = 94
ratos.game.high_boundary_from = 95
ratos.game.high_boundary_to = 100
ratos.game.low_boundary_points = 1
ratos.game.middle_boundary_points = 3
ratos.game.high_boundary_points = 5
# Strike size within one week to grant a bonus
ratos.game.bonus_strike = 3
# Bonus size to be added to the total points
ratos.game.bonus_size = 10
# Percentage of users from the top to the bottom of the sorted by points list that are considered weekly winners
ratos.game.top_weekly = 10

# Specifies the day and time each week to reset the weekly table
ratos.game.reset_weekly_day = SUNDAY
ratos.game.reset_weekly_hour = 23
ratos.game.reset_weekly_minute = 59

# How would you call users who have won multiple weeks?
ratos.game.user_label.0 = Novice
ratos.game.user_label.1 = Beginner
ratos.game.user_label.2 = Smart
ratos.game.user_label.3 = Mature
ratos.game.user_label.5 = Professional
ratos.game.user_label.20 = Expert
ratos.game.user_label.100 = Genius








