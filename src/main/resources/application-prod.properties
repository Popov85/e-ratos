server.port = 8080

# Environment variables are specified in docker-compose.yaml
spring.datasource.url=jdbc:mysql://${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_NAME}?serverTimezone=UTC&rewriteBatchedStatements=true&useSSL=false
spring.datasource.username=${DATABASE_USER}
spring.datasource.password=${DATABASE_PASSWORD}
spring.datasource.driver-class-name = com.mysql.cj.jdbc.Driver
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.connection-timeout=30000

# Cache type options: {none, simple, caffeine, redis}
spring.cache.type=redis
spring.cache.cache-names = question
# Make sure your cached questions are not stale (not updated) for long period!
# Basically, we encourage to update cache on daily basis (load-time/stale-period trade-off)
spring.cache.caffeine.spec=maximumSize=10000,expireAfterAccess=1d

# Should we use some specific store type for backing HttpSession? Options: {none, redis}
spring.session.store-type=redis
# Cron expression for expired session cleanup job. Every min by default
spring.session.redis.cleanup-cron=0 * * * * *
# Sessions flush mode.
spring.session.redis.flush-mode=on_save
# Namespace for keys used to store sessions.
spring.session.redis.namespace=spring:session

# Environment variables are specified in docker-compose.yaml
spring.redis.host=${REDIS_HOST}
spring.redis.password=${REDIS_SECRET}
spring.redis.port=${REDIS_PORT}

# As per LTI v1.1.1, this is the base URL which TC (LMS) should request with POST to perform launch request
# Replace localhost and port with the actual domain name before the production deployment
ratos.lti.launch_url = ${LTI_LAUNCH_URL}
ratos.lti.launch_path = /lti/1p0/launch
# Whether we should replace https (requested) to http (actual) protocols?
ratos.lti.launch_url_fix = false

spring.jpa.properties.hibernate.cache.use_second_level_cache=false
spring.jpa.properties.hibernate.cache.use_query_cache=false
spring.jpa.properties.hibernate.cache.region.factory_class=org.hibernate.cache.jcache.JCacheRegionFactory
spring.jpa.properties.hibernate.javax.cache.provider = org.ehcache.jsr107.EhcacheCachingProvider
spring.jpa.properties.javax.persistence.sharedCache.mode=ENABLE_SELECTIVE
spring.jpa.properties.hibernate.javax.cache.uri = classpath:ehcache.xml
