spring.application.name=ratos

spring.profiles.active=prod
# Accepted languages {EN, FR, RU}
ratos.init.locale = EN

# Whether we should take into account student groups when deciding if to allow access to a given schema?
ratos.session.include_groups = true
# Whether we should shuffle answers each time? If true, randomizes answers of questions where possible.
ratos.session.schuffle_enabled = true
# Algorithm to randomly pick up questions from DB {SIMPLE, CACHED, DECIDE}
ratos.session.random_algorithm = CACHED
# How many sessions can be preserved by a user in this installation of RATOS
ratos.session.preserved_limit = 5
# How many questions can be kept starred by a user in this installation of RATOS
ratos.session.starred_limit = 100
# Should we save to DB results of time-outed, cancelled and abandoned sessions?
ratos.session.save_timeouted_results = true
ratos.session.save_cancelled_results = false
ratos.session.save_abandoned_results = true
# The percent (%) of total batch score that will be distracted in case of batch/session time-out
ratos.session.timeout_penalty = 50
# The quantity of seconds that is used to compensate network round-trips between batch requests (experimental)
ratos.session.tiemout_leeway = 3

# Cleaning of the heavy result_details table with JSON serialised session details is enabled by default
ratos.result.clean_on = true
# Specifies the day and time when to clean the result_details table {DAILY, WEEKLY, MONTHLY}
ratos.result.period = DAILY
ratos.result.clean_hour = 23
ratos.result.clean_minute = 59

# Game mode is enabled by default
# If false, everything below is ignored
ratos.game.game_on = true
# Game mode boundaries and points within these boundaries
ratos.game.low_boundary_from = 80.0
ratos.game.low_boundary_to = 84.99
ratos.game.middle_boundary_from = 85.0
ratos.game.middle_boundary_to = 94.99
ratos.game.high_boundary_from = 95.0
ratos.game.high_boundary_to = 100.0
ratos.game.low_boundary_points = 1
ratos.game.middle_boundary_points = 3
ratos.game.high_boundary_points = 5
# Strike size within one week to grant a bonus
ratos.game.bonus_strike = 3
# Bonus size to be added to the total points
ratos.game.bonus_size = 10
# Percentage of users from the top to the bottom of the sorted by points list that are considered weekly winners
ratos.game.top_weekly = 10
# Specifies the day and time each week to reset the weekly table
ratos.game.reset_weekly_day = SUNDAY
ratos.game.reset_weekly_hour = 23
ratos.game.reset_weekly_minute = 59
# How would you call users who have won multiple weeks?
# You can change numbers as well as labels to your own language here.
ratos.game.user_label.0 = Novice
ratos.game.user_label.1 = Beginner
ratos.game.user_label.2 = Smart
ratos.game.user_label.3 = Mature
ratos.game.user_label.5 = Professional
ratos.game.user_label.20 = Expert
ratos.game.user_label.100 = Genius
# Gamification behaviour for time-outed and cancelled sessions
ratos.game.process_timeouted_results = true
ratos.game.process_cancelled_results = true

# Allow student self-registration inside LMS
ratos.security.lms-registration = true
# Allow student self-registration outside LMS
ratos.security.non-lms-registration = true


spring.jpa.open-in-view=false
spring.jpa.hibernate.ddl-auto = none

# 200 min of session inactivity, event not fires with spring session jdbc
server.servlet.session.timeout=200m
server.tomcat.max-threads=200

spring.jackson.serialization.WRITE_DATES_AS_TIMESTAMPS = false
spring.jackson.serialization.indent_output=true

spring.quartz.job-store-type=memory
spring.quartz.properties.org.quartz.threadPool.threadCount = 4
