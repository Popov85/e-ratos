# 1. Install docker and docker-compose on a linux server;
# 2. On the server, create a folder ratos3 and copy there docker-compose.yaml and create folders database, sql and redis inside it;
# 2.1 On the server, put sql scripts to init the DB into folder sql (docker will execute all the files with .sql extension);
# 3. Being inside folder ratos3 invoke the following command: docker-compose up -d
# 4. Wait until the app is up (check /department or /session/start?schemeId=1).

version: '3.1'

services:

  ratos_db:
    container_name: ratos_db
    image: mariadb
    restart: always
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=gTq0js9m
      - MYSQL_DATABASE=ratos3
      - MYSQL_USER=spring
      - MYSQL_PASSWORD=gTq0js9m
    volumes:
      - ./database:/var/lib/mysql
      - ./sql:/docker-entrypoint-initdb.d

  redis_db:
    container_name: redis_db
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - ./redis/redis.conf:/redis.conf
    command: [ "redis-server", "/redis.conf" ]

  ratos_app:
    container_name: ratos_app
    depends_on:
      - ratos_db
      - redis_db
    image: gelever85/ratos3:stage
    restart: always
    ports:
      - "80:8080"
    environment:
      - DATABASE_HOST=ratos_db
      - DATABASE_USER=root
      - DATABASE_PASSWORD=gTq0js9m
      - DATABASE_NAME=ratos3
      - DATABASE_PORT=3306
      - REDIS_HOST=redis_db
      - REDIS_SECRET=sP7vCxu5
      - REDIS_PORT=6379
      - SPRING_CACHE_TYPE=caffeine # Specify cache type options: {none, simple, caffeine, redis}
      - SPRING_SESSION_STORE_TYPE=none # Should we use some specific store type for backing HttpSession? {none, redis}
      - SERVLET_SESSION_TIMEOUT=200m # Specify standard http session time-out (must be reasonably long, imagine scenario of 200 questions and 1 min per question)!
      - TOMCAT_MAX_THREADS=200 # Specify the number of threads in Tomcat thread pool (default value is 200);
      - HIBERNATE_ENABLE_2LC=false # Should we enable Hibernate's 2-d level cache? (EH Cache is used  as impl.)
      - RATOS_INIT_CACHE=NONE # Populate cache on start-up {NONE, LARGE, LATEST, ALL}
      - RATOS_INIT_CACHE_THREADS=1 # If previous option, in how many threads we should populate cache on start-up; {CPU cores}
      - RATOS_SESSION_INCLUDE_GROUPS=false # Whether we should take into account student groups when deciding if to allow access to a given schema? (TRUE/FALSE)
      - RATOS_SESSION_SHUFFLE_ENABLED=true # Whether we should shuffle answers each time? If true, randomizes answers of questions where possible? (TRUE/FALSE)
      - RATOS_SESSION_RANDOM_ALGORITHM=CACHED # Algorithm to randomly pick up questions from DB {SIMPLE, CACHED, DECIDE}
      - RATOS_SESSION_PRESERVED_LIMIT=5 # Specify how many sessions can be preserved by a user in this installation of RATOS (ANY REASONABLE NUMBER)
      - RATOS_SESSION_STARRED_LIMIT=100 # Specify how many questions can be kept starred by a user in this installation of RATOS (ANY REASONABLE NUMBER)
      - RATOS_SESSION_SAVE_TIMEOUTED_RESULTS=true # Should we save to DB results of time-outed sessions? (TRUE/FALSE)
      - RATOS_SESSION_SAVE_CANCELLED_RESULTS=true # Should we save to DB results of cancelled sessions? (TRUE/FALSE)
      - RATOS_SESSION_SAVE_ABANDONED_RESULTS=true # Should we save to DB results of abandoned sessions? (TRUE/FALSE)
      - RATOS_SESSION_TIMEOUT_PENALTY=50 # Specify the percent (%) of total batch score that will be distracted in case of batch/session time-out (0-100)
      - RATOS_SESSION_TIMEOUT_LEEWAY=3 # Specify the number of seconds that is used to compensate network round-trips between batch requests. (Experimental)
      - RATOS_RESULT_CLEAN_ON=true # Whether we should clean the heavy result_details table with JSON serialised session details? (TRUE/FALSE)
      - RATOS_RESULT_PERIOD=WEEKLY # If previous option, specify how often to clean the result_details table? {DAILY, WEEKLY, MONTHLY}
      - RATOS_SECURITY_LMS_REGISTRATION=true # Should we allow students to do self-registration inside LMS? (TRUE/FALSE)
      - RATOS_SECURITY_NON_LMS_REGISTRATION=true # Should we allow students to do self-registration outside LMS? (TRUE/FALSE)
      - RATOS_LTI_LAUNCH_URL_FIX=true # Whether we should replace https (requested) to http (actual) protocols? (TRUE/FALSE)
      - RATOS_LTI_LAUNCH_URL=http://ec2-35-157-5-152.eu-central-1.compute.amazonaws.com/lti/1p0/launch # Specify full URL to be used by LMS
    volumes:
      - ./logs:/logs
